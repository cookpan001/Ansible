
user  adam;
worker_processes  16;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  text/html;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
    client_max_body_size 20m;
    #keepalive_timeout  0;
    keepalive_timeout  2;

    #gzip  on;

    server {
        listen       80;
        listen       [::]:80;
        listen       9000;
        listen       [::]:9000;
        listen       443 ssl;
        listen       [::]:443 ssl;
        server_name  *.linkagegame.com;
        ssl_certificate     linkagegame.com.crt;
        ssl_certificate_key linkagegame.com.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        server_name  {{ server_name }} ;
        root   {{ document_root }};
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            index  index.php;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}
        rewrite_log on;
        error_log logs/error.log notice;
        location ~ /s/.*\.json$ {
            default_type text/html;
            charset utf8;
            add_header  Content-Encoding  deflate;
            if ($request_uri ~ "^/s/config/string\.json\?lang=([a-zA-Z]+)") {
                set $lang $1;
                rewrite .* /storage/lang/$lang break;
            }
            if ($request_uri ~ "^/s/config/ota\.json\?otaVer=([0-9]+)") {
                set $otaVer $1;
                rewrite .* /storage/ota/$otaVer break;
            }
            rewrite ^/s/gds/(.*)\.json$ /storage/gds/$1 break;
            rewrite ^/s/config/(.*)\.json$ /storage/$1_config break;
            return 404;
        }
        location ~ /s/data/[_a-zA-Z0-9]+$ {
            default_type text/html;
            charset utf8;
            add_header  Content-Type  "text/json;charset=UTF-8";
            rewrite ^/s/data/(.*)$ /storage/$1 break;
            return 404;
        }
        location ~ /s/[_a-zA-Z0_9]+$ {
            fastcgi_pass   127.0.0.1:{{ fpm_port }};
            include        fastcgi.conf;
            rewrite .* /index.php last;
        }
        location ~ /s/[_a-zA-Z0-9]+/.*$ {
            fastcgi_pass   127.0.0.1:{{ fpm_port }};
            include        fastcgi.conf;
            rewrite .* /index.php last;
        }
        location ~ /s/proxy/.*$ {
            fastcgi_pass   127.0.0.1:{{ fpm_port }};
            include        fastcgi.conf;
            rewrite .* /index.php last;
        }
        location /s {
            if ($request_uri ~ "^/s/config/string\?lang=([a-zA-Z]+)") {
                set $lang $1;
                rewrite .* /storage/lang/$lang.proto break;
            }
            if ($request_uri ~ "^/s/config/ota\?otaVer=([0-9]+)") {
                set $otaVer $1;
                rewrite .* /storage/ota/$otaVer.proto break;
            }
            rewrite ^/s/gds/(.*)$ /storage/gds/$1.proto break;
            rewrite ^/s/config/(.*)$ /storage/$1_config.proto break;
            rewrite ^/s/ota/(.*)$ /ota/$1 break;
            return 404;
        }
        location /r {
            alias {{ document_root }}/proto;
            autoindex on;
            autoindex_exact_size on;
            autoindex_localtime on;
        }
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            fastcgi_pass   127.0.0.1:{{ fpm_port }};
            fastcgi_index  index.php;
            include        fastcgi.conf;
        }
        location ^~ /admin/tools {
            if ($scheme != "https") {
                return 301 https://$host$request_uri;
            }
            auth_basic "Auth Confirm";
            auth_basic_user_file "htpasswd.users";
            fastcgi_pass   127.0.0.1:{{ fpm_port }};
            fastcgi_index  index.php;
            include        fastcgi.conf;
        }
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
